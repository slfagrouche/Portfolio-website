Skip to content
Navigation Menu
slfagrouche
AI-Powered-Mock-Interview

Type / to search
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Settings
Owner avatar
AI-Powered-Mock-Interview
Private
slfagrouche/AI-Powered-Mock-Interview
Go to file
t
Name		
slfagrouche
slfagrouche
Delete backend/.env
ed71435
 · 
2 months ago
backend
Delete backend/.env
2 months ago
frontend
Need to fix websockets
2 months ago
README.md
Need to fix websockets
2 months ago
Repository files navigation
README
AI Mock Interview System
An intelligent interview practice system that uses dual LLM technology to provide realistic interview experiences and feedback.

Features
Real-time voice interaction with AI interviewer
Behavioral question generation based on job context
Immediate feedback and scoring
Interview session recording and review
WebRTC-based audio streaming
Real-time audio visualization
Comprehensive feedback with improvement suggestions
System Architecture
The system consists of three main components:

FastAPI Backend Service

WebSocket server for real-time communication
Session management
Integration with OpenAI APIs
Score calculation and feedback generation
Vite Frontend Application

WebRTC implementation
Real-time audio visualization
Session controls
Interview feedback display
Dual LLM System

Reasoning LLM for question generation and evaluation
Voice LLM for natural conversation flow
Prerequisites
Python 3.8+
Node.js 14+
OpenAI API key
Setup
Backend
Navigate to the backend directory:
cd backend
Install dependencies:
pip install -r requirements.txt
Create a .env file:
OPENAI_API_KEY=your_api_key_here
Start the backend server:
python main.py
Frontend
Navigate to the frontend directory:
cd frontend
Install dependencies:
npm install
Start the development server:
npm run dev
Usage
Open your browser and navigate to http://localhost:5173
Enter the company and position details
Optionally add a job description for more targeted questions
Click "Start Interview" to begin the session
Use the microphone controls to interact with the AI interviewer
Review feedback and improvements after each response
Development
Backend Structure
main.py - FastAPI application and WebSocket server
llm_system.py - Dual LLM implementation for interview logic
Frontend Structure
src/
components/
InterviewSetup.jsx - Initial setup form
InterviewSession.jsx - Main interview interface
FeedbackPanel.jsx - Feedback display
App.jsx - Main application component
main.jsx - Application entry point
Contributing
Fork the repository
Create a feature branch
Commit your changes
Push to the branch
Create a Pull Request
License
MIT

Acknowledgments
OpenAI for providing the API
FastAPI for the backend framework
React and Vite for the frontend tooling
About
No description, website, or topics provided.
Resources
 Readme
 Activity
Stars
 0 stars
Watchers
 1 watching
Forks
 0 forks
Releases
No releases published
Create a new release
Packages
No packages published
Publish your first package
Languages
JavaScript
52.4%
 
Python
46.3%
 
HTML
1.3%
Suggested workflows
Based on your tech stack
Python Package using Anaconda logo
Python Package using Anaconda
Create and test a Python package on multiple Python versions using Anaconda for package management.
SLSA Generic generator logo
SLSA Generic generator
Generate SLSA3 provenance for your existing release workflows
Publish Node.js Package to GitHub Packages logo
Publish Node.js Package to GitHub Packages
Publishes a Node.js package to GitHub Packages.
More workflows
Footer
© 2025 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Docs
Contact
Manage cookies
Do not share my personal information
